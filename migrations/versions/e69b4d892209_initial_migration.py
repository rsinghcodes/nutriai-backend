"""Initial migration

Revision ID: e69b4d892209
Revises: 
Create Date: 2025-09-05 13:23:26.635348

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e69b4d892209'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('food_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('calories', sa.DECIMAL(precision=8, scale=2), nullable=True),
    sa.Column('protein', sa.DECIMAL(precision=8, scale=2), nullable=True),
    sa.Column('carbs', sa.DECIMAL(precision=8, scale=2), nullable=True),
    sa.Column('fats', sa.DECIMAL(precision=8, scale=2), nullable=True),
    sa.Column('vitamins', sa.JSON(), nullable=True),
    sa.Column('reference_amount', sa.DECIMAL(precision=6, scale=2), nullable=False),
    sa.Column('reference_unit', sa.Text(), nullable=False),
    sa.Column('unit_conversions', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_food_items_id'), 'food_items', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('email', sa.Text(), nullable=False),
    sa.Column('password', sa.Text(), nullable=False),
    sa.Column('height_cm', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('weight_kg', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('gender', sa.Text(), nullable=True),
    sa.Column('bmi', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('dietary_prefs', sa.JSON(), nullable=True),
    sa.Column('goals', sa.Text(), nullable=True),
    sa.Column('target_weight', sa.Float(), nullable=True),
    sa.Column('is_onboarded', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('workouts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('unit', sa.Text(), nullable=True),
    sa.Column('calories_per_unit', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('muscle_groups', sa.ARRAY(sa.Text()), nullable=True),
    sa.Column('difficulty', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_workouts_id'), 'workouts', ['id'], unique=False)
    op.create_table('food_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('food_id', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.DECIMAL(precision=6, scale=2), nullable=False),
    sa.Column('unit', sa.Text(), nullable=False),
    sa.Column('logged_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['food_id'], ['food_items.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_food_logs_id'), 'food_logs', ['id'], unique=False)
    op.create_table('plans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_plans_id'), 'plans', ['id'], unique=False)
    op.create_table('reminders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('reminder_type', sa.Text(), nullable=True),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('scheduled_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('sent', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_reminders_id'), 'reminders', ['id'], unique=False)
    op.create_table('workout_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('workout_id', sa.Integer(), nullable=True),
    sa.Column('sets', sa.Integer(), nullable=True),
    sa.Column('reps_per_set', sa.Integer(), nullable=True),
    sa.Column('total_reps', sa.Integer(), nullable=True),
    sa.Column('duration_minutes', sa.Integer(), nullable=True),
    sa.Column('estimated_calories', sa.DECIMAL(precision=6, scale=2), nullable=True),
    sa.Column('logged_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['workout_id'], ['workouts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_workout_logs_id'), 'workout_logs', ['id'], unique=False)
    op.create_table('plan_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('plan_id', sa.Integer(), nullable=True),
    sa.Column('food_id', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.DECIMAL(precision=8, scale=2), nullable=False),
    sa.Column('unit', sa.Text(), nullable=False),
    sa.Column('meal_name', sa.Text(), nullable=False),
    sa.Column('day', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['food_id'], ['food_items.id'], ),
    sa.ForeignKeyConstraint(['plan_id'], ['plans.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_plan_items_id'), 'plan_items', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_plan_items_id'), table_name='plan_items')
    op.drop_table('plan_items')
    op.drop_index(op.f('ix_workout_logs_id'), table_name='workout_logs')
    op.drop_table('workout_logs')
    op.drop_index(op.f('ix_reminders_id'), table_name='reminders')
    op.drop_table('reminders')
    op.drop_index(op.f('ix_plans_id'), table_name='plans')
    op.drop_table('plans')
    op.drop_index(op.f('ix_food_logs_id'), table_name='food_logs')
    op.drop_table('food_logs')
    op.drop_index(op.f('ix_workouts_id'), table_name='workouts')
    op.drop_table('workouts')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_food_items_id'), table_name='food_items')
    op.drop_table('food_items')
    # ### end Alembic commands ###
