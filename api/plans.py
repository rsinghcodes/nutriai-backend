from fastapi import APIRouter, Depends, HTTPException, Request
from sqlalchemy.orm import Session
from db.session import get_db
from services.meal_plan_ai import generate_meal_plan
from db.models.user import User
from db.models.food import FoodItem
from db.models.plan import Plan, PlanItem

router = APIRouter(
    prefix="/v1/generate-plan",
    tags=["Generate AI Plan"]
)

@router.post("/")
def auto_generate_plan(request: Request, days: int = 1, db: Session = Depends(get_db)):
    current_user = request.state.user

    foods = db.query(FoodItem).all()
    food_list = [
        {
            "id": f.id,
            "name": f.name,
            "calories": float(f.calories),
            "protein": float(f.protein),
            "carbs": float(f.carbs),
            "fats": float(f.fats),
            "reference_amount": float(f.reference_amount),
            "reference_unit": f.reference_unit
        }
        for f in foods
    ]

    user_profile = {
        "dietary_prefs": current_user.dietary_prefs,
        "goals": current_user.goals,
        "bmi": current_user.bmi
    }

    plan_data = generate_meal_plan(user_profile, food_list, days)

    # Insert into DB
    new_plan = Plan(user_id=current_user.id, name=f"{days}-Day AI Meal Plan", description="Generated by AI")
    db.add(new_plan)
    db.commit()
    db.refresh(new_plan)

    for day in plan_data.days:
        for meal in day.meals:
            for item in meal.items:
                db.add(PlanItem(
                    plan_id=new_plan.id,
                    food_id=item.food_id,
                    quantity=item.quantity,
                    unit=item.unit,
                    meal_name=meal.meal
                ))
    db.commit()

    return {
        "message": "AI meal plan generated successfully",
        "plan_id": new_plan.id,
        "plan": plan_data.model_dump()
    }
